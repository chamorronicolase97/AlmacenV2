@inject NavigationManager Navigation
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject SessionService sessionService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">WebApp</a>
        <button title="Navigation menu" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <!-- Enlace "Admin", oculto si estamos en ComprobanteVenta o ListadoProductos -->
        @if (MostrarAdminLink() && !EsComprobanteVenta())
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Admin
                </NavLink>
            </div>
        }

        <!-- Enlace "Comprar", oculto si estamos en ComprobanteVenta o ListadoProductos -->
        @if (!sessionService.IsLoggedIn && !EsListadoProductos() && !EsComprobanteVenta())
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/login-cliente" @onclick="NavegarACatalogo">
                    <span class="oi oi-basket" aria-hidden="true"></span> Comprar
                </NavLink>
            </div>
        }

        <!-- Si el usuario está autenticado, mostrar el enlace "Productos" -->
        @if (sessionService.IsLoggedIn)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/productos">
                    <span class="oi oi-box" aria-hidden="true"></span> Productos
                </NavLink>
            </div>
        }

        <!-- Botón para cerrar sesión, visible cuando el usuario está logueado o en ListadoProductos -->
        @if (sessionService.IsLoggedIn || EsListadoProductos() || EsComprobanteVenta())
        {
            <div class="nav-item px-3">
                <button class="nav-link btn btn-link" @onclick="LogoutCliente">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                </button>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override void OnInitialized()
    {
        sessionService.OnChange += StateHasChanged;
        Navigation.LocationChanged += (s, e) => StateHasChanged();
    }

    public void Dispose()
    {
        sessionService.OnChange -= StateHasChanged;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void LogoutCliente()
    {
        sessionService.IsLoggedIn = false;
        Navigation.NavigateTo("/"); // Redirige a la página principal después de logout
    }

    private bool MostrarAdminLink()
    {
        // Oculta el enlace "Admin" si estamos en ListadoProductos o ComprobanteVenta
        return !EsListadoProductos() && !EsComprobanteVenta();
    }

    private bool EsListadoProductos()
    {
        // Verifica si estamos en la página de ListadoProductos
        return Navigation.Uri.Contains("listadoproducto", StringComparison.OrdinalIgnoreCase);
    }

    private bool EsComprobanteVenta()
    {
        // Verifica si estamos en la página de ComprobanteVenta
        return Navigation.Uri.Contains("comprobanteventa", StringComparison.OrdinalIgnoreCase);
    }

    private void NavegarACatalogo()
    {
        // Navega solo si no está en la página ListadoProductos
        if (!EsListadoProductos())
        {
            Navigation.NavigateTo("/login-cliente");
        }
    }
}
